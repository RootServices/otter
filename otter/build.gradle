apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'

group = "org.rootservices"
version = "1.3"
archivesBaseName="otter"

description = """Otter"""

sourceCompatibility = 1.9
targetCompatibility = 1.9


buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    mavenCentral()
    mavenLocal()
}

configurations {
    deployerJars
}

ext {
    servletApiVersion = '4.0.0'
    jettyVersion = '9.4.11.v20180605'
    jacksonVersion = '2.9.6'
    log4jVersion = '2.11.1'
    jwtVersion = '1.3.1'
}

dependencies {
    compile "javax.servlet:javax.servlet-api:${servletApiVersion}"
    compile "org.eclipse.jetty:jetty-annotations:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    compile "org.eclipse.jetty:apache-jsp:${jettyVersion}"
    compile "org.eclipse.jetty:apache-jstl:${jettyVersion}"
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    compile "org.slf4j:slf4j-simple:1.7.25"
    compile "org.apache.logging.log4j:log4j-1.2-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compile "org.rootservices:jwt:${jwtVersion}"
    compile "org.rootservices:otter-translatable:1.0"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "org.asynchttpclient:async-http-client:2.4.4"
}

test {
    mkdir 'logs/jetty'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            if(!project.ext.properties.containsKey("ossrhUser")) {
                project.ext.ossrhUser = 'wrongUser'
                project.ext.ossrhPassword = 'wrongPassword'
            }

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            pom.project {
                name project.name
                packaging 'jar'
                description 'Micro web framework for servlet api 4.0'
                url 'https://github.com/RootServices/otter'

                scm {
                    connection 'git@github.com:RootServices/otter.git'
                    developerConnection 'git@github.com:RootServices/otter.git'
                    url 'https://github.com/RootServices/otter'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://github.com/RootServices/otter/blob/development/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'tmackenzie'
                        name 'Tom MacKenzie'
                        email 'tom@rootservices.org'
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}
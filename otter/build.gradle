apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "net.tokensmith"
description = """Otter"""

sourceCompatibility = 12
targetCompatibility = 12

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    mavenCentral()
    mavenLocal()
}

configurations {
    deployerJars
}

ext {
    servletApiVersion = '5.0'
    jettyVersion = '11.0.1'
    jacksonVersion = '2.12.0'
    log4jVersion = '2.14.0'
    slf4jVersion = '1.7.30'
    jwtVersion = '1.3.4'
    translatableVersion = '1.0'
    mockitoVersion = '2.28.2'
}

dependencies {
    implementation project (':otter-translatable')
    api "jakarta.servlet:jakarta.servlet-api:${servletApiVersion}"
    api "org.eclipse.jetty:jetty-annotations:${jettyVersion}"
    api "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    api "org.eclipse.jetty:apache-jsp:${jettyVersion}"
    api "org.eclipse.jetty:glassfish-jstl:${jettyVersion}"
    api "org.eclipse.jetty:jetty-http:${jettyVersion}"
    api "org.eclipse.jetty.http2:http2-server:${jettyVersion}"
    api "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    api "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    api "com.fasterxml.jackson.module:jackson-module-afterburner:${jacksonVersion}"
    api "net.tokensmith:jwt:${jwtVersion}"

    // bean validation - see RestValidate
    api "jakarta.validation:jakarta.validation-api:3.0.0"
    api 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

    api group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"


    testImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.asynchttpclient:async-http-client:2.4.4"
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4jVersion}"
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4jVersion}"
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"
}

test {
    mkdir 'logs/jetty'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'otter'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'otter'
                packaging = 'jar'
                description = 'Micro web framework for servlet api 5.0'
                url = 'https://github.com/tokensmith/otter'

                scm {
                    connection = 'git@github.com:tokensmith/otter.git'
                    developerConnection = 'git@github.com:tokensmith/otter.git'
                    url = 'https://github.com/tokensmith/otter'
                }

                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://github.com/tokensmith/otter/blob/development/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'tmackenzie'
                        name = 'Tom MacKenzie'
                        email = 'tom@tokensmith.net'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            if(!project.ext.properties.containsKey("ossrhUser")) {
                project.ext.ossrhUser = 'wrongUser'
                project.ext.ossrhPassword = 'wrongPassword'
                print "no ossrh user or password"
            }
            credentials {
                username = project.ext.ossrhUser
                password = project.ext.ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

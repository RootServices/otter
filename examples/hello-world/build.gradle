group 'net.tokensmith'

description = """an example project that uses otter"""

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 12

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    mavenCentral()
    mavenLocal()
}

ext {
    servletApiVersion = '5.0'
    log4jVersion = '2.12.0'
    mainClass = 'net.tokensmith.hello.server.HelloServer'
    pathToJavaMain = "$buildDir/classes/java/main/"
    mainClassAsFilePath = "net/tokensmith/hello/server/HelloServer.class"
    absolutePathToMain = "${pathToJavaMain}${mainClassAsFilePath}"
    neededInRoot = ["net.tokensmith.otter", "org.slf4j", "org.apache.logging.log4j"]
}

dependencies {
    implementation project (':otter-translatable')
    implementation project (':otter')

    // logging
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4jVersion}"
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4jVersion}"
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.asynchttpclient:async-http-client:2.4.4"
}

configurations {
    executableWarDeps
}


war {
    // Root - Danger
    from "${pathToJavaMain}"
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
    manifest {
        attributes 'Main-Class': "${mainClass}"
    }
    // WEB-INF
    from {
        configurations.executableWarDeps.collect { it.isDirectory() ? it : project.zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

test {
    mkdir 'logs/jetty'
    filter {
        includeTestsMatching "*IntegrationTestSuite"
    }
}
